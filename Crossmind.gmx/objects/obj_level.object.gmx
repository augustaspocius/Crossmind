<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create the Level

room_width = (CELL_WIDTH/32) * 960;
room_height = (CELL_WIDTH/32) * 540;


var width = room_width div CELL_WIDTH;
var height = room_height div CELL_HEIGHT;



//Grid
grid = ds_grid_create(width,height)

//Fill the grid
ds_grid_set_region(grid, 0, 0, width-1, height-1, VOID )

//Random 
randomize();

//Controller

var cx = width div 2;
var cy = height div 2; 

//Create player
    instance_create(cx*CELL_WIDTH+CELL_WIDTH/2,cy*CELL_HEIGHT+CELL_HEIGHT/2, obj_player);
//Controller Direction in the center of the grid
var cdir = irandom(3);

//Odds
var odds = 1;

//Create Level
repeat (500)
{
    //Place floor at controller position
    grid[# cx, cy] = FLOOR;
    
    //Randomize Directions
    if (irandom(odds) == odds )
    {
        cdir = irandom(3);
        
    }    
    
    //move
    var xdir = lengthdir_x(1, cdir*90); //dauginama is 90 laipsnio kampu
    var ydir = lengthdir_y(1, cdir*90);
    cx += xdir;
    cy += ydir;
    
    //Don't move outside the boundaries
    cx = clamp(cx, 1, width-2)
    cy = clamp(cy, 1, height-2) 
}

for (var yy = 1; yy &lt; height-1 ; yy++ ) {
    for (var xx = 1; xx &lt; width-1 ; xx++) {
        if (grid[# xx, yy] == FLOOR) {
            if(grid[# xx+1, yy] != FLOOR) grid[# xx+1, yy] = WALL;
            if(grid[# xx-1, yy] != FLOOR) grid[# xx-1, yy] = WALL;
            if(grid[# xx, yy+1] != FLOOR) grid[# xx, yy+1] = WALL;
            if(grid[# xx, yy-1] != FLOOR) grid[# xx, yy-1] = WALL;
         
        }    
    }
}
//Draw the level
for (var yy = 0; yy &lt; height; yy++) {
    for (var xx = 0; xx &lt; width; xx++) {
        if(grid[# xx, yy] == FLOOR) {
            tile_add(bg_floor,0, 0, CELL_WIDTH, CELL_HEIGHT, xx*CELL_WIDTH, yy*CELL_HEIGHT,0);
        } else if (grid[# xx, yy] == WALL) {
              tile_add(bg_wall,0, 0, CELL_WIDTH, CELL_HEIGHT, xx*CELL_WIDTH, yy*CELL_HEIGHT,0);
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="32">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///room restart
room_restart();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
