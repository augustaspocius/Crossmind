<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player_idle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-99999</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>spr_player_idle</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>other</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hsp = 0;
vsp = 0;
spd= 10;
btimer = 0;
image_speed = 0.25;
lives = 5;
key_on = c_white;
steps = 0;
score = 120;
steps = 0;
invincability = 0;
ShotDirection = 0; //Random element for shooting
BulletsSpeed = 0; //Increased bullet speed
BulletsTime = 0; //Increased bullet time
BulletsCreated = 1; //NumberOfBulletsShot
lazers = false;
multishot = false;
global.timeplayed = 0;
bosskilled = 0;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hsp = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>vsp = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ini_open("settings.ini");
Up = ini_read_real("controls", "up", keyboard_check(ord("W")));
Down = ini_read_real("controls", "down",  keyboard_check(ord("S")));
Left = ini_read_real("controls", "left",  keyboard_check(ord("A")));
Right = ini_read_real("controls", "right",  keyboard_check(ord("D")));
ini_close();

MOVELEFT = keyboard_check(ord(string(chr(Left))));
MOVERIGHT = keyboard_check(ord(string(chr(Right))));
MOVEUP = keyboard_check(ord(string(chr(Up))));
MOVEDOWN = keyboard_check(ord(string(chr(Down))));
btimer--;

steps += 1;
if steps &gt;= room_speed
{
steps = 0;
score -=1;
global.timeplayed +=1;
minutes = score / 60;
seconds = score % 60;
///Draw score in minutes and seconds
//draw_text(825, 10, "Timer: " + minutes + ":" + seconds);
}
invincability--;
if(score &lt;= 0)
{
if(room != DeathRoom)
{
game_restart();
}
}
if (lives &lt;= 2)
{
    obj_player.image_blend = c_maroon;
}
else
{
    obj_player.image_blend = c_white;
}
if(lives &lt;= 0 )
{
instance_destroy();
audio_pause_sound(snd_footstep);
audio_play_sound(snd_player_death, 2, false);
room_goto(DeathRoom);
}
//Move Player
if(hsp == 0 &amp;&amp; vsp == 0)
{
 sprite_index = spr_player_idle;
 audio_pause_sound(snd_footstep);
}
if(MOVERIGHT){image_xscale = 1;
sprite_index = spr_player_walking;
//hsp += 0.55
hsp = 8
alarm[1] = 1;
if !audio_is_playing(snd_footstep)
    audio_play_sound(snd_footstep, 1, false);
}
if(MOVELEFT){image_xscale = -1;
sprite_index = spr_player_walking;
//hsp -= 0.55
hsp = -8
alarm[1] = 1;
if !audio_is_playing(snd_footstep)
    audio_play_sound(snd_footstep, 1, false);
}
if(MOVEUP){
sprite_index = spr_player_walking_up;
//vsp -= 0.55
vsp = -8
alarm[0] = 1;
if !audio_is_playing(snd_footstep)
    audio_play_sound(snd_footstep, 1, false);
}
if(MOVEDOWN){
sprite_index = spr_player_walking_down;
//vsp += 0.55
vsp = 8
alarm[0] = 1;
if !audio_is_playing(snd_footstep)
    audio_play_sound(snd_footstep, 1, false);
}

if (vsp &gt; 8)
{
vsp = 8;
}
if (vsp &lt; -8)
{
vsp = -8;
}
if (hsp &gt; 8)
{
hsp = 8;
}
if (hsp &lt; -8)
{
hsp = -8;
}

if(hsp != 0 || vsp != 0) &amp;&amp; (audio_is_paused(snd_footstep)){
    audio_resume_sound(snd_footstep);
}


//Push
scr_push();
//Move the object
scr_move(hsp ,vsp);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_bonfire">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (invincability &lt;=0)
{
obj_player.image_blend = c_red;
lives --;
invincability = 20;
audio_play_sound(snd_damage, 10, false);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_lock">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(other.col == key_on){
    var key_col = key_on;
    with(obj_lock){
    if(key_col == col)
    instance_destroy();
    audio_play_sound(snd_unlock,1,false);
    }
    with(obj_key){
    if(key_col == col)
    instance_destroy();
    }
    key_on=c_white;
    lives++;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_enemy_attack">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (invincability &lt;=0)
{
obj_player.image_blend = c_red;
lives --;
invincability = 64;
audio_play_sound(snd_damage, 10, false);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_enemy_fireball">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (invincability &lt;= 0)
{
obj_player.image_blend = c_red;
lives --;
invincability = 64;
audio_play_sound(snd_damage, 10, false);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>203</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_kill_object</functionname>
        <codestring></codestring>
        <whoName>other</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="5" enumb="82">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>game_restart();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="40">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
//Shooting
        if(btimer &lt; 0){
        btimer = room_speed * 0.5;  
        var i;
        for(i = 0; i &lt; BulletsCreated; i++)
        {
        ShotDirection = random_range(-15*i,15*i); //Random element for shooting
        bullet = instance_create(x,y,obj_bullet);
        bullet.speed = 15 + BulletsSpeed;
        bullet.direction = 270 + ShotDirection;
        if (lazers = true)
            {
                bullet.image_blend = c_red;
            }
        if(MOVEUP)
        {
        bullet.speed = 10 + BulletsSpeed;
        }
        if(MOVEDOWN)
        {
        bullet.speed = 20 + BulletsSpeed;
        }
        if(MOVELEFT)
        {
        bullet.direction = 290 + ShotDirection;
        }
        if(MOVERIGHT)
        {
        bullet.direction = 250 + ShotDirection;
        }
        }
}
ShotDirection = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="39">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_xscale = 1;
//Shooting
        if(btimer &lt; 0){
        
        btimer = room_speed * 0.5;  
        var i;
        for(i = 0; i &lt; BulletsCreated; i++)
        {
        ShotDirection = random_range(-15*i,15*i); //Random element for shooting
        bullet = instance_create(x,y,obj_bullet);
        if (lazers = true)
            {
                bullet.image_blend = c_red;
            }
        bullet.speed = 15 + BulletsSpeed;
        bullet.direction = 0 + ShotDirection;
        if(MOVEUP)
        {
        bullet.direction = 340 + ShotDirection;
        }
        if(MOVEDOWN)
        {
        bullet.direction = 20 + ShotDirection;
        }
        if(MOVELEFT)
        {
        bullet.speed = 10 + BulletsSpeed;
        }
        if(MOVERIGHT)
        {
        bullet.speed = 20 + BulletsSpeed;
        }
        }
}
ShotDirection = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="38">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Shooting
if(btimer &lt; 0)
{
        btimer = room_speed * 0.5;  
        var i;
        for(i = 0; i &lt; BulletsCreated; i++)
        {
        ShotDirection = random_range(-15*i,15*i); //Random element for shooting
        bullet = instance_create(x,y,obj_bullet);
        if (lazers = true)
            {
                bullet.image_blend = c_red;
            }
        bullet.speed = 15 + BulletsSpeed;
        bullet.direction = 90 + ShotDirection;
        if(MOVEUP)
        {
        bullet.speed = 20 + BulletsSpeed;
        }
        if(MOVEDOWN)
        {
        bullet.speed = 10 + BulletsSpeed;
        }
        if(MOVELEFT)
        {
        bullet.direction = 70 + ShotDirection;
        }
        if(MOVERIGHT)
        {
        bullet.direction = 110 + ShotDirection;
        }
        }
}
ShotDirection = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="37">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
image_xscale = -1
//Shooting
if(btimer &lt; 0)
{    
        btimer = room_speed * 0.5; 
        var i;
        for(i = 0; i &lt; BulletsCreated; i++)
        {
            ShotDirection = random_range(-15 * i,15 * i); //Random element for shooting
            bullet = instance_create(x,y,obj_bullet);
            if (lazers = true)
            {
                bullet.image_blend = c_red;
                
            }
            bullet.speed = 15 + BulletsSpeed;
            bullet.direction = 180 + ShotDirection;
            if(MOVEUP)
            {
            bullet.direction = 200 + ShotDirection;
            }
            if(MOVEDOWN)
            {
            bullet.direction = 160 + ShotDirection;
            }
            if(MOVELEFT)
            {
            bullet.speed = 20 + BulletsSpeed;
            }
            if(MOVERIGHT)
            {
            bullet.speed = 10 + BulletsSpeed;
        }
        }
}
ShotDirection = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>714</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_draw_life_images</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>5</kind>
            <sprite>spr_player_lives</sprite>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>500</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring>draw_self();</codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>524</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_color</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>13</kind>
            <string>16777215</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>703</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_draw_score</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>825</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>10</string>
          </argument>
          <argument>
            <kind>1</kind>
            <string>Timer: </string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>526</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_font</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>12</kind>
            <font>pixel_cowboy</font>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(key_on != c_white)
{
draw_sprite_ext(spr_key, -1, 10, 515, 1, 1, 0, key_on, 1);

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
